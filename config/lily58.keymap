/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behavior_tap {
        tapping-term-ms = <800>; /* Adjust the value to your desired tapping term */
    };
};

/ {
    macros {
        xcDocumentation: xc_documentation {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp NUMBER_0>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp NUMBER_0>;

            label = "XCODE_DOCUMENTATION";
        };

        xcConsole: xc_console {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp C>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp C>;

            label = "XCODE_CONSOLE";
        };

        xcQuickHelp: xc_quick_help {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp QUESTION>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp QUESTION>;

            label = "XCODE_QUICK_HELP";
        };

        xcBuild: xc_build {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp B>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp B>;

            label = "XCODE_BUILD";
        };

        xcAnalyze: xc_analyze {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp B>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp B>;

            label = "XCODE_ANALYZE";
        };

        xcRun: xc_run {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp R>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp R>;

            label = "XCODE_RUN";
        };

        xcProfile: xc_profile {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp I>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp I>;

            label = "XCODE_PROFILE";
        };

        xcTest: xc_test {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp U>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp U>;

            label = "XCODE_TEST";
        };

        xcClean: xc_clean {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp K>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp K>;

            label = "XCODE_CLEAN";
        };

        xcClearConsole: xc_clear_console {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp K>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp K>;

            label = "XCODE_CLEAR_CONSOLE";
        };

        // Code Navigation

        xcGotoLine: xc_goto_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp L>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp L>;

            label = "XCODE_GOTO_LINE";
        };

        xcFindInFile: xc_find_in_file {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp F>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp F>;

            label = "XCODE_FIND_IN_FILE";
        };

        xcFindInProject: xc_find_in_project {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp F>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp F>;

            label = "XCODE_FIND_IN_PROJECT";
        };

        xcFindNext: xc_find_next {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp G>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp G>;

            label = "XCODE_FIND_NEXT";
        };

        xcFindPrevious: xc_find_previous {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp G>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp G>;

            label = "XCODE_FIND_PREVIOUS";
        };

        xcOpenQuickly: xc_open_quickly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp O>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp O>;

            label = "XCODE_OPEN_QUICKLY";
        };

        xcJumpToDefinition: xc_jump_to_definition {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp J>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp J>;

            label = "XCODE_JUMP_DEF";
        };

        xcGoBack: xc_go_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp LEFT_ARROW>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp LEFT_ARROW>;

            label = "XCODE_GO_BACK";
        };

        xcGoForward: xc_go_forward {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp RIGHT_ARROW>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp RIGHT_ARROW>;

            label = "XCODE_GO_FORWARD";
        };

        xcShowRelatedItems: xc_show_related_items {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp NUMBER_1>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp NUMBER_1>;

            label = "XCODE_SHOW_RELATED";
        };

        // Code Editing

        xcCommentSelection: xc_comment_selection {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp SLASH>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp SLASH>;

            label = "XCODE_COMMENT";
        };

        xcDeleteLine: xc_delete_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp D>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp D>;

            label = "XCODE_DELETE_LINE";
        };

        xcMoveLineUp: xc_move_line_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp UP_ARROW>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp UP_ARROW>;

            label = "XCODE_MOVE_LINE_UP";
        };

        xcMoveLineDown: xc_move_line_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp DOWN_ARROW>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp DOWN_ARROW>;

            label = "XCODE_MOVE_LINE_DOWN";
        };

        xcFoldMethod: xc_fold_method {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp LEFT_ARROW>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp LEFT_ARROW>;

            label = "XCODE_FOLD_METHOD";
        };

        xcUnfoldMethod: xc_unfold_method {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp RIGHT_ARROW>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp RIGHT_ARROW>;

            label = "XCODE_UNFOLD_METHOD";
        };

        xcEditAllInScope: xc_edit_all_in_scope {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp E>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp E>;

            label = "XCODE_EDIT_ALL_IN_SCOPE";
        };

        // Debugging

        xcAddBreakpoint: xc_add_breakpoint {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp BACKSLASH>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp BACKSLASH>;

            label = "XCODE_ADD_BREAKPOINT";
        };

        xcContinueExecution: xc_continue_execution {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp Y>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp Y>;

            label = "XCODE_CONTINUE";
        };

        xcStepOver: xc_step_over {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp O>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp O>;

            label = "XCODE_STEP_OVER";
        };

        xcStepInto: xc_step_into {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp I>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp I>;

            label = "XCODE_STEP_INTO";
        };

        xcStepOut: xc_step_out {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp U>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp U>;

            label = "XCODE_STEP_OUT";
        };

        // File Navigation

        xcNewFile: xc_new_file {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp N>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp N>;

            label = "XCODE_NEW_FILE";
        };

        xcSave: xc_save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp S>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp S>;

            label = "XCODE_SAVE";
        };

        // View Management

        xcToggleNavigator: xc_toggle_navigator {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp NUMBER_0>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp NUMBER_0>;

            label = "XCODE_TOGGLE_NAV";
        };

        xcToggleDebugArea: xc_toggle_debug_area {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp Y>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND &kp Y>;

            label = "XCODE_TOGGLE_DEBUG";
        };

        macScreenShotToClipBoard: macScreenShot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp LEFT_SHIFT &kp LCTRL &kp NUMBER_4>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp LEFT_SHIFT &kp LEFT_CONTROL &kp NUMBER_4>;

            label = "MACSCREENSHOT";
        };

        macScreenShotToDeskTop: macScreenShotToDeskTop {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp LEFT_SHIFT &kp NUMBER_4>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp LEFT_SHIFT &kp NUMBER_4>;

            label = "MACSCREENSHOTTODESKTOP";
        };

        commandShiftF: commandShiftF {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp LEFT_SHIFT &kp F>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp LEFT_SHIFT &kp F>;
        };

        commandF: commandF {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp F>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp F>;

            label = "COMMANDF";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp C>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp C>;

            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp V>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp V>;

            label = "PASTE";
        };

        controlRightArrow: controlRightArrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp RIGHT_ARROW>,
                <&macro_release>,
                <&kp LCTRL &kp RIGHT_ARROW>;

            label = "CONTROLRIGHTARROW";
        };

        controlLeftArrow: controlLeftArrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_ARROW>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT>;

            label = "CONTROLLEFTARROW";
        };

        deleteFile: deleteFile {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCMD &kp BACKSPACE>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp BACKSPACE>;

            label = "DELETEFILE";
        };

        commandTab: commandTab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp TAB>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp TAB>;

            label = "COMMANDTAB";
        };
    };

    keymap {
        compatible = "zmk,keymap";

                base_alpha {
            bindings = <
&none  &kp Q  &kp W  &kp F             &kp P             &kp B    &kp J  &kp L              &kp U              &kp Y    &kp SINGLE_QUOTE  &none
&none  &kp A  &kp R  &kp S             &kp T             &kp G    &kp M  &kp N              &kp E              &kp I    &kp O             &none
&none  &kp Z  &kp X  &kp C             &kp D             &kp V    &kp K  &kp H              &kp COMMA          &kp DOT  &kp SLASH         &none
                     &td_left_nav_sys  &lt_left 4 SPACE  &mo 3    &mo 2  &lt_right 5 SPACE  &td_right_nav_sys
            >;
        };

        game_alpha {
            bindings = <
&trans  &kp TAB    &kp Q  &kp W   &kp E  &kp R        &kp J   &kp L   &kp U      &kp Y    &kp APOS  &trans
&trans  &kp LSHFT  &kp A  &kp S   &kp D  &kp F        &kp M   &kp N   &kp E      &kp I    &kp O     &trans
&trans  &kp LCTRL  &kp Z  &kp X   &kp C  &kp V        &kp K   &kp H   &kp COMMA  &kp DOT  &kp FSLH  &trans
                          &trans  &mo 4  &kp SPACE    &trans  &trans  &trans
            >;
        };

        left_sym_flip_alpha {
            bindings = <
&none  &kp GRAVE  &kp TILDE      &kp CARET         &kp DOLLAR            &kp HASH     &kp B   &kp P   &kp F   &kp W  &kp Q  &none
&none  &kp PIPE   &kp COLON      &kp MINUS         &kp LEFT_PARENTHESIS  &kp EQUAL    &kp G   &kp T   &kp S   &kp R  &kp A  &none
&none  &trans     &kp LESS_THAN  &kp LEFT_BRACKET  &kp LEFT_BRACE        &kp PIPE     &kp V   &kp D   &kp C   &kp X  &kp Z  &none
                                 &trans            &trans                &trans       &trans  &trans  &trans
            >;
        };

        right_sym_flip_alpha {
            bindings = <
&none  &kp APOS  &kp Y    &kp U      &kp L   &kp J     &kp EXCLAMATION  &kp AMPERSAND          &kp AT_SIGN        &kp PERCENT       &kp ASTERISK   &none
&none  &kp O     &kp I    &kp E      &kp N   &kp M     &kp PLUS         &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &kp SEMICOLON     &kp BACKSLASH  &none
&none  &kp FSLH  &kp DOT  &kp COMMA  &kp H   &kp K     &kp BACKSLASH    &kp RIGHT_BRACE        &kp RIGHT_BRACKET  &kp GREATER_THAN  &trans         &none
                          &trans     &trans  &trans    &trans           &trans                 &trans
            >;
        };

        left_num_nav {
            bindings = <
&trans  &kp LC(DOT)  &kp N7  &kp N8  &kp N9  &kp COMMA    &kp PRINTSCREEN  &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &kp RC(A)  &trans
&trans  &sl 6        &kp N4  &kp N5  &kp N6  &kp N0       &kp RC(Y)        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &mo 9      &trans
&trans  &sl 7        &kp N1  &kp N2  &kp N3  &kp DOT      &kp RC(V)        &kp RC(Z)       &kp RC(C)       &kp RC(X)        &trans     &trans
                             &trans  &trans  &trans       &trans           &trans          &trans
            >;
        };

        right_num_nav {
            bindings = <
&trans  &kp LC(A)  &kp PAGE_DOWN   &kp UP_ARROW    &kp PAGE_UP      &kp PRINTSCREEN    &kp COMMA  &kp N7  &kp N8  &kp N9  &kp RC(DOT)  &trans
&trans  &mo 9      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LC(Y)          &kp N0     &kp N4  &kp N5  &kp N6  &sl 7        &trans
&trans  &trans     &kp LC(X)       &kp LC(C)       &kp LC(Z)        &kp LC(V)          &kp DOT    &kp N1  &kp N2  &kp N3  &sl 6        &trans
                                   &trans          &trans           &trans             &trans     &trans  &trans
            >;
        };

        symbol {
            bindings = <
&none  &kp GRAVE  &kp TILDE      &kp CARET         &kp DOLLAR            &kp HASH     &kp EXCLAMATION  &kp AMPERSAND          &kp AT_SIGN        &kp PERCENT       &kp ASTERISK   &none
&none  &kp PIPE   &kp COLON      &kp MINUS         &kp LEFT_PARENTHESIS  &kp EQUAL    &kp PLUS         &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &kp SEMICOLON     &kp BACKSLASH  &none
&none  &trans     &kp LESS_THAN  &kp LEFT_BRACKET  &kp LEFT_BRACE        &kp PIPE     &kp BACKSLASH    &kp RIGHT_BRACE        &kp RIGHT_BRACKET  &kp GREATER_THAN  &trans         &none
                                 &trans            &trans                &trans       &trans           &trans                 &trans
            >;
        };

        symbol_flip {
            bindings = <
&none  &kp ASTERISK   &kp PERCENT       &kp AT_SIGN        &kp AMPERSAND          &kp EXCLAMATION    &kp HASH   &kp DOLLAR            &kp CARET         &kp TILDE      &kp GRAVE  &none
&none  &kp BACKSLASH  &kp SEMICOLON     &kp UNDERSCORE     &kp RIGHT_PARENTHESIS  &kp PLUS           &kp EQUAL  &kp LEFT_PARENTHESIS  &kp MINUS         &kp COLON      &kp PIPE   &none
&none  &trans         &kp GREATER_THAN  &kp RIGHT_BRACKET  &kp RIGHT_BRACE        &kp BACKSLASH      &kp PIPE   &kp LEFT_BRACE        &kp LEFT_BRACKET  &kp LESS_THAN  &trans     &none
                                        &trans             &trans                 &trans             &trans     &trans                &trans
            >;
        };

        symbol_cond {
            bindings = <
&none  &kp GRAVE  &kp TILDE      &kp CARET         &kp DOLLAR            &kp HASH     &kp EXCLAMATION  &kp AMPERSAND          &kp AT_SIGN        &kp PERCENT       &kp ASTERISK   &none
&none  &kp PIPE   &kp COLON      &kp MINUS         &kp LEFT_PARENTHESIS  &kp EQUAL    &kp PLUS         &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &kp SEMICOLON     &kp BACKSLASH  &none
&none  &trans     &kp LESS_THAN  &kp LEFT_BRACKET  &kp LEFT_BRACE        &kp PIPE     &kp BACKSLASH    &kp RIGHT_BRACE        &kp RIGHT_BRACKET  &kp GREATER_THAN  &trans         &none
                                 &trans            &trans                &trans       &trans           &trans                 &trans
            >;
        };

        nav_alt {
            bindings = <
&trans  &trans  &kp C_STOP  &kp C_VOLUME_UP    &kp C_PLAY_PAUSE  &trans    &trans  &kp C_PLAY_PAUSE  &kp C_VOLUME_UP    &kp C_STOP  &trans  &trans
&trans  &trans  &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_NEXT        &trans    &trans  &kp C_NEXT        &kp C_VOLUME_DOWN  &kp C_PREV  &trans  &trans
&trans  &trans  &trans      &trans             &trans            &trans    &trans  &trans            &trans             &trans      &trans  &trans
                            &trans             &trans            &trans    &trans  &trans            &trans
            >;
        };

        sys_left {
            bindings = <
&trans  &bt BT_CLR    &out OUT_BLE  &out OUT_USB  &sys_reset    &bootloader     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        sys_right {
            bindings = <
&none  &none  &none  &none   &none   &none     &bootloader  &sys_reset  &none   &none  &none  &none
&none  &none  &none  &none   &none   &none     &none        &none       &none   &none  &none  &none
&none  &none  &none  &none   &none   &none     &none        &none       &none   &none  &none  &none
                     &trans  &trans  &trans    &trans       &trans      &trans
            >;
        };

        mod_layer_left {
            bindings = <
&trans  &trans        &trans            &kp LEFT_SHIFT  &kp TAB         &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &sk LEFT_ALT  &sk LEFT_CONTROL  &sk LCTRL       &sk LEFT_SHIFT  &sk LEFT_GUI    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans            &trans          &trans          &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans          &trans          &trans          &trans  &trans  &trans
            >;
        };

        mod_layer_right {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans         &kp TAB          &kp RIGHT_SHIFT    &trans             &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &sk RIGHT_GUI  &sk RIGHT_SHIFT  &sk RIGHT_CONTROL  &sk RIGHT_CONTROL  &sk RIGHT_ALT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans         &trans           &trans             &trans             &trans         &trans
                        &trans  &trans  &trans    &trans         &trans           &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        sym {
            if-layers = <2 3>;
            then-layer = <8>;
        };
    };
};
